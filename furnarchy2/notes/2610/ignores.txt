2610
----

004099A0: void __cdecl ignore( const char* name )
CPU Disasm
Address   Hex dump          Command                                  Comments
004099A0  /$  81EC 0C040000 SUB ESP,40C                              ; Furcadia.004099A0(guessed Arg1)
004099A6  |.  A1 20755400   MOV EAX,DWORD PTR DS:[547520]
004099AB  |.  33C4          XOR EAX,ESP
004099AD  |.  898424 080400 MOV DWORD PTR SS:[LOCAL.0],EAX
004099B4  |.  8B8424 100400 MOV EAX,DWORD PTR SS:[ARG.1]
004099BB  |.  8038 40       CMP BYTE PTR DS:[EAX],40
004099BE  |.  53            PUSH EBX
004099BF  |.  68 00020000   PUSH 200                                 ; //Arg3 = 200
004099C4  |.  75 2D         JNE SHORT 004099F3                       ; ||
004099C6  |.  8D8C24 0C0200 LEA ECX,[LOCAL.129]                      ; ||
004099CD  |.  51            PUSH ECX                                 ; ||Arg2 => OFFSET LOCAL.129
004099CE  |.  83C0 01       ADD EAX,1                                ; ||
004099D1  |.  50            PUSH EAX                                 ; ||Arg1
004099D2  |.  E8 19270400   CALL 0044C0F0                            ; |\Furcadia.0044C0F0
004099D7  |.  83C4 0C       ADD ESP,0C                               ; |
004099DA  |.  8D9424 080200 LEA EDX,[LOCAL.129]                      ; |
004099E1  |.  52            PUSH EDX                                 ; |
004099E2  |.  8D4424 0C     LEA EAX,[LOCAL.257]                      ; |
004099E6  |.  68 6C935200   PUSH OFFSET Furcadia.0052936C            ; |ASCII "@%s"
004099EB  |.  50            PUSH EAX                                 ; |
004099EC  |.  E8 7D5B0F00   CALL 004FF56E                            ; |
004099F1  |.  EB 0B         JMP SHORT 004099FE                       ; |
004099F3  |>  8D4C24 0C     LEA ECX,[LOCAL.257]                      ; |
004099F7  |.  51            PUSH ECX                                 ; |Arg2 => OFFSET LOCAL.257
004099F8  |.  50            PUSH EAX                                 ; |Arg1 => [ARG.1]
004099F9  |.  E8 F2260400   CALL 0044C0F0                            ; \Furcadia.0044C0F0
004099FE  |>  83C4 0C       ADD ESP,0C
00409A01  |.  8D5C24 08     LEA EBX,[LOCAL.257]
00409A05  |.  E8 B6000000   CALL 00409AC0
00409A0A  |.  83F8 FF       CMP EAX,-1
00409A0D  |.  7E 39         JLE SHORT 00409A48
00409A0F  |.  8BD3          MOV EDX,EBX
00409A11  |.  52            PUSH EDX                                 ; /Arg1
00409A12  |.  E8 39030000   CALL 00409D50                            ; \Furcadia.00409D50
00409A17  |.  83C4 04       ADD ESP,4
00409A1A  |.  83F8 01       CMP EAX,1
00409A1D  |.  75 1D         JNE SHORT 00409A3C
00409A1F  |.  807C24 08 40  CMP BYTE PTR SS:[LOCAL.257],40
00409A24  |.  75 0A         JNE SHORT 00409A30
00409A26  |.  8BC3          MOV EAX,EBX
00409A28  |.  50            PUSH EAX
00409A29  |.  68 70935200   PUSH OFFSET Furcadia.00529370            ; ASCII "<font color='success'>Stopped ignoring channel '%s'.</font>"
00409A2E  |.  EB 71         JMP SHORT 00409AA1
00409A30  |>  8D4C24 08     LEA ECX,[LOCAL.257]
00409A34  |.  51            PUSH ECX
00409A35  |.  68 AC935200   PUSH OFFSET Furcadia.005293AC            ; ASCII "<font color='success'>Stopped ignoring player '%s'.</font>"
00409A3A  |.  EB 65         JMP SHORT 00409AA1
00409A3C  |>  8D5424 08     LEA EDX,[LOCAL.257]
00409A40  |.  52            PUSH EDX
00409A41  |.  68 E8935200   PUSH OFFSET Furcadia.005293E8            ; ASCII "<font color='error'>Couldn't stop ignoring '%s'.</font>"
00409A46  |.  EB 59         JMP SHORT 00409AA1
00409A48  |>  8D4C24 08     LEA ECX,[LOCAL.257]
00409A4C  |.  E8 9F010000   CALL 00409BF0
00409A51  |.  83F8 FD       CMP EAX,-3
00409A54  |.  74 41         JE SHORT 00409A97
00409A56  |.  83F8 FE       CMP EAX,-2
00409A59  |.  74 30         JE SHORT 00409A8B
00409A5B  |.  83F8 FF       CMP EAX,-1
00409A5E  |.  74 1F         JE SHORT 00409A7F
00409A60  |.  807C24 08 40  CMP BYTE PTR SS:[LOCAL.257],40
00409A65  |.  75 0C         JNE SHORT 00409A73
00409A67  |.  8D4424 08     LEA EAX,[LOCAL.257]
00409A6B  |.  50            PUSH EAX
00409A6C  |.  68 28955200   PUSH OFFSET Furcadia.00529528            ; ASCII "<font color='success'>Started ignoring channel '%s'.</font>"
00409A71  |.  EB 2E         JMP SHORT 00409AA1
00409A73  |>  8D4C24 08     LEA ECX,[LOCAL.257]
00409A77  |.  51            PUSH ECX
00409A78  |.  68 64955200   PUSH OFFSET Furcadia.00529564            ; ASCII "<font color='success'>Started ignoring player '%s'.</font>"
00409A7D  |.  EB 22         JMP SHORT 00409AA1
00409A7F  |>  8D5424 08     LEA EDX,[LOCAL.257]
00409A83  |.  52            PUSH EDX
00409A84  |.  68 20945200   PUSH OFFSET Furcadia.00529420            ; ASCII "<font color='error'>Sorry, cannot ignore '%s' -- name too short.</font>"
00409A89  |.  EB 16         JMP SHORT 00409AA1
00409A8B  |>  8D4424 08     LEA EAX,[LOCAL.257]
00409A8F  |.  50            PUSH EAX
00409A90  |.  68 68945200   PUSH OFFSET Furcadia.00529468            ; ASCII "<font color='error'>Sorry, cannot ignore '%s' -- ignore slots are full. Please remove some of your ignores.</font>"
00409A95  |.  EB 0A         JMP SHORT 00409AA1
00409A97  |>  8D4C24 08     LEA ECX,[LOCAL.257]
00409A9B  |.  51            PUSH ECX
00409A9C  |.  68 E0945200   PUSH OFFSET Furcadia.005294E0            ; ASCII "<font color='error'>Sorry, cannot ignore '%s' -- name too long.</font>"
00409AA1  |>  E8 9A080000   CALL 0040A340
00409AA6  |.  8B8C24 140400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409AAD  |.  83C4 08       ADD ESP,8
00409AB0  |.  5B            POP EBX
00409AB1  |.  33CC          XOR ECX,ESP
00409AB3  |.  E8 BC560F00   CALL 004FF174
00409AB8  |.  81C4 0C040000 ADD ESP,40C
00409ABE  \.  C3            RETN


00409BF0: int __fastcall _add_ignore( const char* name : ECX )
CPU Disasm
Address   Hex dump          Command                                  Comments
00409BF0  /$  81EC 04040000 SUB ESP,404
00409BF6  |.  A1 20755400   MOV EAX,DWORD PTR DS:[547520]
00409BFB  |.  33C4          XOR EAX,ESP
00409BFD  |.  898424 000400 MOV DWORD PTR SS:[LOCAL.0],EAX
00409C04  |.  53            PUSH EBX
00409C05  |.  8BD9          MOV EBX,ECX
00409C07  |.  8BC3          MOV EAX,EBX
00409C09  |.  8D50 01       LEA EDX,[EAX+1]
00409C0C  |.  8D6424 00     LEA ESP,[LOCAL.257]
00409C10  |>  8A08          /MOV CL,BYTE PTR DS:[EAX]
00409C12  |.  83C0 01       |ADD EAX,1
00409C15  |.  84C9          |TEST CL,CL
00409C17  |.^ 75 F7         \JNE SHORT 00409C10
00409C19  |.  2BC2          SUB EAX,EDX
00409C1B  |.  83F8 02       CMP EAX,2
00409C1E  |.  73 19         JNB SHORT 00409C39
00409C20  |.  83C8 FF       OR EAX,FFFFFFFF
00409C23  |.  5B            POP EBX
00409C24  |.  8B8C24 000400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409C2B  |.  33CC          XOR ECX,ESP
00409C2D  |.  E8 42550F00   CALL 004FF174
00409C32  |.  81C4 04040000 ADD ESP,404
00409C38  |.  C3            RETN
00409C39  |>  8BC3          MOV EAX,EBX
00409C3B  |.  8D50 01       LEA EDX,[EAX+1]
00409C3E  |.  8BFF          MOV EDI,EDI
00409C40  |>  8A08          /MOV CL,BYTE PTR DS:[EAX]
00409C42  |.  83C0 01       |ADD EAX,1
00409C45  |.  84C9          |TEST CL,CL
00409C47  |.^ 75 F7         \JNE SHORT 00409C40
00409C49  |.  2BC2          SUB EAX,EDX
00409C4B  |.  83F8 40       CMP EAX,40
00409C4E  |.  76 1B         JBE SHORT 00409C6B
00409C50  |.  B8 FDFFFFFF   MOV EAX,-3
00409C55  |.  5B            POP EBX
00409C56  |.  8B8C24 000400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409C5D  |.  33CC          XOR ECX,ESP
00409C5F  |.  E8 10550F00   CALL 004FF174
00409C64  |.  81C4 04040000 ADD ESP,404
00409C6A  |.  C3            RETN
00409C6B  |>  E8 50FEFFFF   CALL 00409AC0
00409C70  |.  85C0          TEST EAX,EAX
00409C72  |.  7D 24         JGE SHORT 00409C98
00409C74  |.  57            PUSH EDI
00409C75  |.  33FF          XOR EDI,EDI
00409C77  |.  B8 3CB28000   MOV EAX,OFFSET Furcadia.0080B23C
00409C7C  |.  8D6424 00     LEA ESP,[LOCAL.258]
00409C80  |>  8038 00       /CMP BYTE PTR DS:[EAX],0
00409C83  |.  74 29         |JE SHORT 00409CAE
00409C85  |.  83C0 40       |ADD EAX,40
00409C88  |.  83C7 01       |ADD EDI,1
00409C8B  |.  3D 3CCB8000   |CMP EAX,OFFSET Furcadia.0080CB3C
00409C90  |.^ 7C EE         \JL SHORT 00409C80
00409C92  |.  B8 FEFFFFFF   MOV EAX,-2
00409C97  |.  5F            POP EDI
00409C98  |>  5B            POP EBX
00409C99  |.  8B8C24 000400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409CA0  |.  33CC          XOR ECX,ESP
00409CA2  |.  E8 CD540F00   CALL 004FF174
00409CA7  |.  81C4 04040000 ADD ESP,404
00409CAD  |.  C3            RETN
00409CAE  |>  803B 40       CMP BYTE PTR DS:[EBX],40
00409CB1  |.  75 6A         JNE SHORT 00409D1D
00409CB3  |.  56            PUSH ESI
00409CB4  |.  68 00020000   PUSH 200                                 ; /Arg3 = 200
00409CB9  |.  8D4424 10     LEA EAX,[LOCAL.256]                      ; |
00409CBD  |.  50            PUSH EAX                                 ; |Arg2 => OFFSET LOCAL.256
00409CBE  |.  83C3 01       ADD EBX,1                                ; |
00409CC1  |.  53            PUSH EBX                                 ; |Arg1
00409CC2  |.  E8 29240400   CALL 0044C0F0                            ; \Furcadia.0044C0F0
00409CC7  |.  8D4C24 18     LEA ECX,[LOCAL.256]
00409CCB  |.  51            PUSH ECX
00409CCC  |.  8D9424 1C0200 LEA EDX,[LOCAL.128]
00409CD3  |.  68 6C935200   PUSH OFFSET Furcadia.0052936C            ; ASCII "@%s"
00409CD8  |.  52            PUSH EDX
00409CD9  |.  E8 90580F00   CALL 004FF56E
00409CDE  |.  8BF7          MOV ESI,EDI
00409CE0  |.  6A 40         PUSH 40                                  ; /Arg3 = 40
00409CE2  |.  8D8424 280200 LEA EAX,[LOCAL.128]                      ; |
00409CE9  |.  C1E6 06       SHL ESI,6                                ; |
00409CEC  |.  50            PUSH EAX                                 ; |Arg2 => OFFSET LOCAL.128
00409CED  |.  8D8E 3CB28000 LEA ECX,[ESI+80B23C]                     ; |
00409CF3  |.  51            PUSH ECX                                 ; |Arg1
00409CF4  |.  E8 57530F00   CALL 004FF050                            ; \Furcadia.004FF050
00409CF9  |.  83C4 24       ADD ESP,24
00409CFC  |.  C686 7CB28000 MOV BYTE PTR DS:[ESI+80B27C],0
00409D03  |.  5E            POP ESI
00409D04  |.  8BC7          MOV EAX,EDI
00409D06  |.  5F            POP EDI
00409D07  |.  5B            POP EBX
00409D08  |.  8B8C24 000400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409D0F  |.  33CC          XOR ECX,ESP
00409D11  |.  E8 5E540F00   CALL 004FF174
00409D16  |.  81C4 04040000 ADD ESP,404
00409D1C  |.  C3            RETN
00409D1D  |>  8BD7          MOV EDX,EDI
00409D1F  |.  C1E2 06       SHL EDX,6
00409D22  |.  6A 40         PUSH 40                                  ; /Arg3 = 40
00409D24  |.  81C2 3CB28000 ADD EDX,OFFSET Furcadia.0080B23C         ; |
00409D2A  |.  52            PUSH EDX                                 ; |Arg2
00409D2B  |.  53            PUSH EBX                                 ; |Arg1
00409D2C  |.  E8 BF230400   CALL 0044C0F0                            ; \Furcadia.0044C0F0
00409D31  |.  8B8C24 140400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409D38  |.  83C4 0C       ADD ESP,0C
00409D3B  |.  8BC7          MOV EAX,EDI
00409D3D  |.  5F            POP EDI
00409D3E  |.  5B            POP EBX
00409D3F  |.  33CC          XOR ECX,ESP
00409D41  |.  E8 2E540F00   CALL 004FF174
00409D46  |.  81C4 04040000 ADD ESP,404
00409D4C  \.  C3            RETN


00409D50: int __cdecl _rm_ignore( const char* name )
CPU Disasm
Address   Hex dump          Command                                  Comments
00409D50  /$  81EC 08040000 SUB ESP,408                              ; Furcadia.00409D50(guessed Arg1)
00409D56  |.  A1 20755400   MOV EAX,DWORD PTR DS:[547520]
00409D5B  |.  33C4          XOR EAX,ESP
00409D5D  |.  898424 040400 MOV DWORD PTR SS:[LOCAL.0],EAX
00409D64  |.  55            PUSH EBP
00409D65  |.  8BAC24 100400 MOV EBP,DWORD PTR SS:[ARG.1]
00409D6C  |.  8BC5          MOV EAX,EBP
00409D6E  |.  8D50 01       LEA EDX,[EAX+1]
00409D71  |>  8A08          /MOV CL,BYTE PTR DS:[EAX]
00409D73  |.  83C0 01       |ADD EAX,1
00409D76  |.  84C9          |TEST CL,CL
00409D78  |.^ 75 F7         \JNE SHORT 00409D71
00409D7A  |.  2BC2          SUB EAX,EDX
00409D7C  |.  83F8 02       CMP EAX,2
00409D7F  |.  73 18         JNB SHORT 00409D99
00409D81  |.  33C0          XOR EAX,EAX
00409D83  |.  5D            POP EBP
00409D84  |.  8B8C24 040400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409D8B  |.  33CC          XOR ECX,ESP
00409D8D  |.  E8 E2530F00   CALL 004FF174
00409D92  |.  81C4 08040000 ADD ESP,408
00409D98  |.  C3            RETN
00409D99  |>  807D 00 40    CMP BYTE PTR SS:[EBP],40
00409D9D  |.  68 00020000   PUSH 200                                 ; //Arg3 = 200
00409DA2  |.  74 10         JE SHORT 00409DB4                        ; ||
00409DA4  |.  8D4424 0C     LEA EAX,[LOCAL.256]                      ; ||
00409DA8  |.  50            PUSH EAX                                 ; ||Arg2 => OFFSET LOCAL.256
00409DA9  |.  55            PUSH EBP                                 ; ||Arg1 => [ARG.1]
00409DAA  |.  E8 41230400   CALL 0044C0F0                            ; |\Furcadia.0044C0F0
00409DAF  |.  83C4 0C       ADD ESP,0C                               ; |
00409DB2  |.  EB 28         JMP SHORT 00409DDC                       ; |
00409DB4  |>  8D8C24 0C0200 LEA ECX,[LOCAL.128]                      ; |
00409DBB  |.  51            PUSH ECX                                 ; |Arg2 => OFFSET LOCAL.128
00409DBC  |.  55            PUSH EBP                                 ; |Arg1 => [ARG.1]
00409DBD  |.  E8 2E230400   CALL 0044C0F0                            ; \Furcadia.0044C0F0
00409DC2  |.  8D9424 140200 LEA EDX,[LOCAL.128]
00409DC9  |.  52            PUSH EDX
00409DCA  |.  8D4424 18     LEA EAX,[LOCAL.256]
00409DCE  |.  68 6C935200   PUSH OFFSET Furcadia.0052936C            ; ASCII "@%s"
00409DD3  |.  50            PUSH EAX
00409DD4  |.  E8 95570F00   CALL 004FF56E
00409DD9  |.  83C4 18       ADD ESP,18
00409DDC  |>  8D4424 08     LEA EAX,[LOCAL.256]
00409DE0  |.  8D50 01       LEA EDX,[EAX+1]
00409DE3  |>  8A08          /MOV CL,BYTE PTR DS:[EAX]
00409DE5  |.  83C0 01       |ADD EAX,1
00409DE8  |.  84C9          |TEST CL,CL
00409DEA  |.^ 75 F7         \JNE SHORT 00409DE3
00409DEC  |.  2BC2          SUB EAX,EDX
00409DEE  |.  56            PUSH ESI
00409DEF  |.  57            PUSH EDI
00409DF0  |.  74 2E         JE SHORT 00409E20
00409DF2  |.  33FF          XOR EDI,EDI
00409DF4  |.  BE 3CB28000   MOV ESI,OFFSET Furcadia.0080B23C
00409DF9  |.  8DA424 000000 LEA ESP,[LOCAL.260]
00409E00  |>  8D4C24 10     /LEA ECX,[LOCAL.256]
00409E04  |.  56            |PUSH ESI                                ; /Arg2
00409E05  |.  51            |PUSH ECX                                ; |Arg1 => OFFSET LOCAL.256
00409E06  |.  E8 23A30F00   |CALL 0050412E                           ; \Furcadia.0050412E
00409E0B  |.  83C4 08       |ADD ESP,8
00409E0E  |.  85C0          |TEST EAX,EAX
00409E10  |.  74 4B         |JE SHORT 00409E5D
00409E12  |.  83C6 40       |ADD ESI,40
00409E15  |.  83C7 01       |ADD EDI,1
00409E18  |.  81FE 3CCB8000 |CMP ESI,OFFSET Furcadia.0080CB3C
00409E1E  |.^ 7C E0         \JL SHORT 00409E00
00409E20  |>  33FF          XOR EDI,EDI
00409E22  |.  BE 3CB28000   MOV ESI,OFFSET Furcadia.0080B23C
00409E27  |>  56            /PUSH ESI                                ; /Arg2
00409E28  |.  55            |PUSH EBP                                ; |Arg1 => [ARG.1]
00409E29  |.  E8 00A30F00   |CALL 0050412E                           ; \Furcadia.0050412E
00409E2E  |.  83C4 08       |ADD ESP,8
00409E31  |.  85C0          |TEST EAX,EAX
00409E33  |.  74 28         |JE SHORT 00409E5D
00409E35  |.  83C6 40       |ADD ESI,40
00409E38  |.  83C7 01       |ADD EDI,1
00409E3B  |.  81FE 3CCB8000 |CMP ESI,OFFSET Furcadia.0080CB3C
00409E41  |.^ 7C E4         \JL SHORT 00409E27
00409E43  |.  5F            POP EDI
00409E44  |.  5E            POP ESI
00409E45  |.  33C0          XOR EAX,EAX
00409E47  |.  5D            POP EBP
00409E48  |.  8B8C24 040400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409E4F  |.  33CC          XOR ECX,ESP
00409E51  |.  E8 1E530F00   CALL 004FF174
00409E56  |.  81C4 08040000 ADD ESP,408
00409E5C  |.  C3            RETN
00409E5D  |>  8B8C24 100400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409E64  |.  C1E7 06       SHL EDI,6
00409E67  |.  C687 3CB28000 MOV BYTE PTR DS:[EDI+80B23C],0
00409E6E  |.  5F            POP EDI
00409E6F  |.  5E            POP ESI
00409E70  |.  5D            POP EBP
00409E71  |.  33CC          XOR ECX,ESP
00409E73  |.  B8 01000000   MOV EAX,1
00409E78  |.  E8 F7520F00   CALL 004FF174
00409E7D  |.  81C4 08040000 ADD ESP,408
00409E83  \.  C3            RETN


00409AC0: int __cdecl is_ignored( const char* name : EBX )
CPU Disasm
Address   Hex dump          Command                                  Comments
00409AC0  /$  81EC 08040000 SUB ESP,408
00409AC6  |.  A1 20755400   MOV EAX,DWORD PTR DS:[547520]
00409ACB  |.  33C4          XOR EAX,ESP
00409ACD  |.  898424 040400 MOV DWORD PTR SS:[LOCAL.0],EAX
00409AD4  |.  8BC3          MOV EAX,EBX
00409AD6  |.  8D50 01       LEA EDX,[EAX+1]
00409AD9  |.  8DA424 000000 LEA ESP,[LOCAL.257]
00409AE0  |>  8A08          /MOV CL,BYTE PTR DS:[EAX]
00409AE2  |.  83C0 01       |ADD EAX,1
00409AE5  |.  84C9          |TEST CL,CL
00409AE7  |.^ 75 F7         \JNE SHORT 00409AE0
00409AE9  |.  2BC2          SUB EAX,EDX
00409AEB  |.  83F8 02       CMP EAX,2
00409AEE  |.  73 18         JNB SHORT 00409B08
00409AF0  |.  83C8 FF       OR EAX,FFFFFFFF
00409AF3  |.  8B8C24 040400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409AFA  |.  33CC          XOR ECX,ESP
00409AFC  |.  E8 73560F00   CALL 004FF174
00409B01  |.  81C4 08040000 ADD ESP,408
00409B07  |.  C3            RETN
00409B08  |>  803B 40       CMP BYTE PTR DS:[EBX],40
00409B0B  |.  68 00020000   PUSH 200                                 ; //Arg3 = 200
00409B10  |.  74 10         JE SHORT 00409B22                        ; ||
00409B12  |.  8D4424 08     LEA EAX,[LOCAL.256]                      ; ||
00409B16  |.  50            PUSH EAX                                 ; ||Arg2 => OFFSET LOCAL.256
00409B17  |.  53            PUSH EBX                                 ; ||Arg1 => ARG.EBX
00409B18  |.  E8 D3250400   CALL 0044C0F0                            ; |\Furcadia.0044C0F0
00409B1D  |.  83C4 0C       ADD ESP,0C                               ; |
00409B20  |.  EB 2B         JMP SHORT 00409B4D                       ; |
00409B22  |>  8D8C24 080200 LEA ECX,[LOCAL.128]                      ; |
00409B29  |.  51            PUSH ECX                                 ; |Arg2 => OFFSET LOCAL.128
00409B2A  |.  8D53 01       LEA EDX,[EBX+1]                          ; |
00409B2D  |.  52            PUSH EDX                                 ; |Arg1 => ARG.EBX+1
00409B2E  |.  E8 BD250400   CALL 0044C0F0                            ; \Furcadia.0044C0F0
00409B33  |.  8D8424 100200 LEA EAX,[LOCAL.128]
00409B3A  |.  50            PUSH EAX
00409B3B  |.  8D4C24 14     LEA ECX,[LOCAL.256]
00409B3F  |.  68 6C935200   PUSH OFFSET Furcadia.0052936C            ; ASCII "@%s"
00409B44  |.  51            PUSH ECX
00409B45  |.  E8 245A0F00   CALL 004FF56E
00409B4A  |.  83C4 18       ADD ESP,18
00409B4D  |>  8D4424 04     LEA EAX,[LOCAL.256]
00409B51  |.  8D50 01       LEA EDX,[EAX+1]
00409B54  |>  8A08          /MOV CL,BYTE PTR DS:[EAX]
00409B56  |.  83C0 01       |ADD EAX,1
00409B59  |.  84C9          |TEST CL,CL
00409B5B  |.^ 75 F7         \JNE SHORT 00409B54
00409B5D  |.  2BC2          SUB EAX,EDX
00409B5F  |.  56            PUSH ESI
00409B60  |.  57            PUSH EDI
00409B61  |.  74 2D         JE SHORT 00409B90
00409B63  |.  33FF          XOR EDI,EDI
00409B65  |.  BE 3CB28000   MOV ESI,OFFSET Furcadia.0080B23C
00409B6A  |.  8D9B 00000000 LEA EBX,[EBX]
00409B70  |>  8D5424 0C     /LEA EDX,[LOCAL.256]
00409B74  |.  56            |PUSH ESI                                ; /Arg2
00409B75  |.  52            |PUSH EDX                                ; |Arg1 => OFFSET LOCAL.256
00409B76  |.  E8 B3A50F00   |CALL 0050412E                           ; \Furcadia.0050412E
00409B7B  |.  83C4 08       |ADD ESP,8
00409B7E  |.  85C0          |TEST EAX,EAX
00409B80  |.  74 4D         |JE SHORT 00409BCF
00409B82  |.  83C6 40       |ADD ESI,40
00409B85  |.  83C7 01       |ADD EDI,1
00409B88  |.  81FE 3CCB8000 |CMP ESI,OFFSET Furcadia.0080CB3C
00409B8E  |.^ 7C E0         \JL SHORT 00409B70
00409B90  |>  33FF          XOR EDI,EDI
00409B92  |.  BE 3CB28000   MOV ESI,OFFSET Furcadia.0080B23C
00409B97  |>  56            /PUSH ESI                                ; /Arg2
00409B98  |.  53            |PUSH EBX                                ; |Arg1
00409B99  |.  E8 90A50F00   |CALL 0050412E                           ; \Furcadia.0050412E
00409B9E  |.  83C4 08       |ADD ESP,8
00409BA1  |.  85C0          |TEST EAX,EAX
00409BA3  |.  74 2A         |JE SHORT 00409BCF
00409BA5  |.  83C6 40       |ADD ESI,40
00409BA8  |.  83C7 01       |ADD EDI,1
00409BAB  |.  81FE 3CCB8000 |CMP ESI,OFFSET Furcadia.0080CB3C
00409BB1  |.^ 7C E4         \JL SHORT 00409B97
00409BB3  |.  5F            POP EDI
00409BB4  |.  B8 FEFFFFFF   MOV EAX,-2
00409BB9  |.  5E            POP ESI
00409BBA  |.  8B8C24 040400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409BC1  |.  33CC          XOR ECX,ESP
00409BC3  |.  E8 AC550F00   CALL 004FF174
00409BC8  |.  81C4 08040000 ADD ESP,408
00409BCE  |.  C3            RETN
00409BCF  |>  8B8C24 0C0400 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409BD6  |.  8BC7          MOV EAX,EDI
00409BD8  |.  5F            POP EDI
00409BD9  |.  5E            POP ESI
00409BDA  |.  33CC          XOR ECX,ESP
00409BDC  |.  E8 93550F00   CALL 004FF174
00409BE1  |.  81C4 08040000 ADD ESP,408
00409BE7  \.  C3            RETN


00409E90: bool __cdecl is_line_not_ignored( const char* line : ECX, int len );
CPU Disasm
Address   Hex dump          Command                                  Comments
00409E90  /$  B8 20190000   MOV EAX,1920                             ; Furcadia.00409E90(guessed Arg1)
00409E95  |.  E8 06A41000   CALL 005142A0                            ; Allocates 6432. bytes on stack
00409E9A  |.  A1 20755400   MOV EAX,DWORD PTR DS:[547520]
00409E9F  |.  33C4          XOR EAX,ESP
00409EA1  |.  898424 1C1900 MOV DWORD PTR SS:[LOCAL.0],EAX
00409EA8  |.  53            PUSH EBX
00409EA9  |.  55            PUSH EBP
00409EAA  |.  8BAC24 2C1900 MOV EBP,DWORD PTR SS:[ARG.1]
00409EB1  |.  56            PUSH ESI
00409EB2  |.  8BD9          MOV EBX,ECX
00409EB4  |.  B8 01000000   MOV EAX,1
00409EB9  |.  33F6          XOR ESI,ESI
00409EBB  |.  85ED          TEST EBP,EBP
00409EBD  |.  57            PUSH EDI
00409EBE  |.  895C24 1C     MOV DWORD PTR SS:[LOCAL.1604],EBX
00409EC2  |.  894424 14     MOV DWORD PTR SS:[LOCAL.1606],EAX
00409EC6  |.  0F8E 1B010000 JLE 00409FE7
00409ECC  |.  8D6424 00     LEA ESP,[LOCAL.1611]
00409ED0  |>  803C33 3C     CMP BYTE PTR DS:[ESI+EBX],3C
00409ED4  |.  0F85 FE000000 JNE 00409FD8
00409EDA  |.  8D4424 20     LEA EAX,[LOCAL.1603]
00409EDE  |.  50            PUSH EAX                                 ; /Arg4 => OFFSET LOCAL.1603
00409EDF  |.  55            PUSH EBP                                 ; |Arg3 => [ARG.1]
00409EE0  |.  56            PUSH ESI                                 ; |Arg2
00409EE1  |.  53            PUSH EBX                                 ; |Arg1
00409EE2  |.  E8 69D1FFFF   CALL 00407050                            ; \Furcadia.00407050
00409EE7  |.  8BF8          MOV EDI,EAX
00409EE9  |.  83C4 10       ADD ESP,10
00409EEC  |.  85FF          TEST EDI,EDI
00409EEE  |.  897C24 18     MOV DWORD PTR SS:[LOCAL.1605],EDI
00409EF2  |.  0F8E E0000000 JLE 00409FD8
00409EF8  |.  8D4C24 20     LEA ECX,[LOCAL.1603]
00409EFC  |.  68 A0955200   PUSH OFFSET Furcadia.005295A0            ; /Arg2 = ASCII "name"
00409F01  |.  51            PUSH ECX                                 ; |Arg1 => OFFSET LOCAL.1603
00409F02  |.  E8 27A20F00   CALL 0050412E                            ; \Furcadia.0050412E
00409F07  |.  83C4 08       ADD ESP,8
00409F0A  |.  85C0          TEST EAX,EAX
00409F0C  |.  0F85 EE000000 JNE 0040A000
00409F12  |.  68 A8955200   PUSH OFFSET Furcadia.005295A8            ; /Arg1 = ASCII "shortname"
00409F17  |.  8D5C24 24     LEA EBX,[LOCAL.1603]                     ; |
00409F1B  |.  E8 E0D0FFFF   CALL 00407000                            ; \Furcadia.00407000
00409F20  |.  8BE8          MOV EBP,EAX
00409F22  |.  83C4 04       ADD ESP,4
00409F25  |.  85ED          TEST EBP,EBP
00409F27  |.  0F8C 9E000000 JL 00409FCB
00409F2D  |.  68 B4955200   PUSH OFFSET Furcadia.005295B4            ; /Arg1 = ASCII "forced"
00409F32  |.  E8 C9D0FFFF   CALL 00407000                            ; \Furcadia.00407000
00409F37  |.  83C4 04       ADD ESP,4
00409F3A  |.  68 BC955200   PUSH OFFSET Furcadia.005295BC            ; /Arg1 = ASCII "src"
00409F3F  |.  8BF8          MOV EDI,EAX                              ; |
00409F41  |.  E8 BAD0FFFF   CALL 00407000                            ; \Furcadia.00407000
00409F46  |.  83C4 04       ADD ESP,4
00409F49  |.  85FF          TEST EDI,EDI
00409F4B  |.  8BF0          MOV ESI,EAX
00409F4D  |.  7D 1E         JGE SHORT 00409F6D
00409F4F  |.  8BD5          MOV EDX,EBP
00409F51  |.  C1E2 09       SHL EDX,9
00409F54  |.  8D9C14 240200 LEA EBX,[EDX+ESP+224]
00409F5B  |.  E8 60FBFFFF   CALL 00409AC0
00409F60  |.  83F8 FF       CMP EAX,-1
00409F63  |.  7E 08         JLE SHORT 00409F6D
00409F65  |.  C74424 14 000 MOV DWORD PTR SS:[LOCAL.1606],0
00409F6D  |>  85F6          TEST ESI,ESI
00409F6F  |.  7C 56         JL SHORT 00409FC7
00409F71  |.  837C24 14 01  CMP DWORD PTR SS:[LOCAL.1606],1
00409F76  |.  75 4F         JNE SHORT 00409FC7
00409F78  |.  C1E6 09       SHL ESI,9
00409F7B  |.  8DB434 240200 LEA ESI,[ESI+ESP+224]
00409F82  |.  68 C0955200   PUSH OFFSET Furcadia.005295C0            ; /Arg2 = ASCII "whisper-from"
00409F87  |.  56            PUSH ESI                                 ; |Arg1
00409F88  |.  E8 A1A10F00   CALL 0050412E                            ; \Furcadia.0050412E
00409F8D  |.  83C4 08       ADD ESP,8
00409F90  |.  85C0          TEST EAX,EAX
00409F92  |.  74 24         JE SHORT 00409FB8
00409F94  |.  68 D0955200   PUSH OFFSET Furcadia.005295D0            ; /Arg2 = ASCII "request"
00409F99  |.  56            PUSH ESI                                 ; |Arg1
00409F9A  |.  E8 8FA10F00   CALL 0050412E                            ; \Furcadia.0050412E
00409F9F  |.  83C4 08       ADD ESP,8
00409FA2  |.  85C0          TEST EAX,EAX
00409FA4  |.  74 12         JE SHORT 00409FB8
00409FA6  |.  68 D8955200   PUSH OFFSET Furcadia.005295D8            ; /Arg2 = ASCII "helper"
00409FAB  |.  56            PUSH ESI                                 ; |Arg1
00409FAC  |.  E8 7DA10F00   CALL 0050412E                            ; \Furcadia.0050412E
00409FB1  |.  83C4 08       ADD ESP,8
00409FB4  |.  85C0          TEST EAX,EAX
00409FB6  |.  75 0F         JNE SHORT 00409FC7
00409FB8  |>  C1E5 09       SHL EBP,9
00409FBB  |.  8D9C2C 240200 LEA EBX,[EBP+ESP+224]
00409FC2  |.  E8 19B80600   CALL 004757E0
00409FC7  |>  8B7C24 18     MOV EDI,DWORD PTR SS:[LOCAL.1605]
00409FCB  |>  8BAC24 341900 MOV EBP,DWORD PTR SS:[ARG.1]
00409FD2  |>  8B5C24 1C     MOV EBX,DWORD PTR SS:[LOCAL.1604]
00409FD6  |.  8BF7          MOV ESI,EDI
00409FD8  |>  83C6 01       ADD ESI,1
00409FDB  |.  3BF5          CMP ESI,EBP
00409FDD  |.^ 0F8C EDFEFFFF JL 00409ED0
00409FE3  |.  8B4424 14     MOV EAX,DWORD PTR SS:[LOCAL.1606]
00409FE7  |>  8B8C24 2C1900 MOV ECX,DWORD PTR SS:[LOCAL.0]
00409FEE  |.  5F            POP EDI
00409FEF  |.  5E            POP ESI
00409FF0  |.  5D            POP EBP
00409FF1  |.  5B            POP EBX
00409FF2  |.  33CC          XOR ECX,ESP
00409FF4  |.  E8 7B510F00   CALL 004FF174
00409FF9  |.  81C4 20190000 ADD ESP,1920
00409FFF  |.  C3            RETN
0040A000  |>  8D4424 20     LEA EAX,[LOCAL.1603]
0040A004  |.  68 E0955200   PUSH OFFSET Furcadia.005295E0            ; /Arg2 = ASCII "desc"
0040A009  |.  50            PUSH EAX                                 ; |Arg1 => OFFSET LOCAL.1603
0040A00A  |.  E8 1FA10F00   CALL 0050412E                            ; \Furcadia.0050412E
0040A00F  |.  83C4 08       ADD ESP,8
0040A012  |.  85C0          TEST EAX,EAX
0040A014  |.  75 51         JNE SHORT 0040A067
0040A016  |.  68 A8955200   PUSH OFFSET Furcadia.005295A8            ; /Arg1 = ASCII "shortname"
0040A01B  |.  8D5C24 24     LEA EBX,[LOCAL.1603]                     ; |
0040A01F  |.  E8 DCCFFFFF   CALL 00407000                            ; \Furcadia.00407000
0040A024  |.  83C4 04       ADD ESP,4
0040A027  |.  85C0          TEST EAX,EAX
0040A029  |.^ 7C A7         JL SHORT 00409FD2
0040A02B  |.  C1E0 09       SHL EAX,9
0040A02E  |.  8D9C04 240200 LEA EBX,[EAX+ESP+224]
0040A035  |.  E8 86FAFFFF   CALL 00409AC0
0040A03A  |.  83F8 FF       CMP EAX,-1
0040A03D  |.  7E 08         JLE SHORT 0040A047
0040A03F  |.  C74424 14 000 MOV DWORD PTR SS:[LOCAL.1606],0
0040A047  |>  8D4437 01     LEA EAX,[ESI+EDI+1]
0040A04B  |.  3BC5          CMP EAX,EBP
0040A04D  |.  7C 02         JL SHORT 0040A051
0040A04F  |.  8BC5          MOV EAX,EBP
0040A051  |>  8B4C24 1C     MOV ECX,DWORD PTR SS:[LOCAL.1604]
0040A055  |.  03C1          ADD EAX,ECX
0040A057  |.  50            PUSH EAX                                 ; /Arg1
0040A058  |.  8BC3          MOV EAX,EBX                              ; |
0040A05A  |.  E8 71CEFFFF   CALL 00406ED0                            ; \Furcadia.00406ED0
0040A05F  |.  83C4 04       ADD ESP,4
0040A062  |.^ E9 6BFFFFFF   JMP 00409FD2
0040A067  |>  8D5424 20     LEA EDX,[LOCAL.1603]
0040A06B  |.  68 E8955200   PUSH OFFSET Furcadia.005295E8            ; /Arg2 = ASCII "channel"
0040A070  |.  52            PUSH EDX                                 ; |Arg1 => OFFSET LOCAL.1603
0040A071  |.  E8 B8A00F00   CALL 0050412E                            ; \Furcadia.0050412E
0040A076  |.  83C4 08       ADD ESP,8
0040A079  |.  85C0          TEST EAX,EAX
0040A07B  |.^ 0F85 51FFFFFF JNE 00409FD2
0040A081  |.  68 A0955200   PUSH OFFSET Furcadia.005295A0            ; /Arg1 = ASCII "name"
0040A086  |.  8D5C24 24     LEA EBX,[LOCAL.1603]                     ; |
0040A08A  |.  E8 71CFFFFF   CALL 00407000                            ; \Furcadia.00407000
0040A08F  |.  83C4 04       ADD ESP,4
0040A092  |.  85C0          TEST EAX,EAX
0040A094  |.^ 0F8C 38FFFFFF JL 00409FD2
0040A09A  |.  C1E0 09       SHL EAX,9
0040A09D  |.  8D9C04 240200 LEA EBX,[EAX+ESP+224]
0040A0A4  |.  E8 17FAFFFF   CALL 00409AC0
0040A0A9  |.  83F8 FF       CMP EAX,-1
0040A0AC  |.^ 0F8E 20FFFFFF JLE 00409FD2
0040A0B2  |.  C74424 14 000 MOV DWORD PTR SS:[LOCAL.1606],0
0040A0BA  \.^ E9 13FFFFFF   JMP 00409FD2


2520
----

004098C0: void __cdecl ignore( const char* name )

00409B10: int __fastcall _add_ignore( const char* name : ECX )
00409C70: int __cdecl _rm_ignore( const char* name )

004099E0: int __cdecl is_ignored( const char* name : EBX )
00409DB0: bool __cdecl is_line_not_ignored( const char* line : ECX, int len );


2510
----

00409820: void __cdecl ignore( const char* name )

00409A70: int __fastcall _add_ignore( const char* name : ECX )
00409BD0: int __cdecl _rm_ignore( const char* name )

00409940: int __cdecl is_ignored( const char* name : EBX )
0040C6EE: bool __cdecl is_line_not_ignored( const char* line : ECX, int len );

2410
----

0040F3E2: void __cdecl ignore( const char* name )

00409C40: int __fastcall _add_ignore( const char* name : ECX )
00409DA0: int __cdecl _rm_ignore( const char* name )

00409B10: int __cdecl is_ignored( const char* name : EBX )
00409EE0: bool __cdecl is_line_not_ignored( const char* line : ECX, int len );

2320
----

Tracking the 'ignore' command/string, you can get to the ignore function:

00409430 void __cdecl ignore( const char* name )

The "ignore off" command is an exception that's handled before calling ignore().
The ignore() function decides whether to toggle an ignore on or off, then calls the REAL
ignore functions:

00409680 int __fastcall _add_ignore( const char* name : ECX )
004097E0 int __cdecl _rm_ignore( const char* name )

_add_ignore() and _rm_ignore() return 0 on success.

Ignores are stored in a huge static array:

00697B78 char s_ignores[ 100 ][ 64 ]

To find out if someone is ignored, you go through all 100 elements.
New ignores are just inserted wherever an empty string appears.

In order to know how to toggle an ignore, ignore() calls

00409550 int __cdecl is_ignored( const char* name )

is_ignored() returns < -1 if name is not ignored.

If you look at the calls to is_ignored(), you find the higher-level version of it:

00409910 bool __cdecl is_line_not_ignored( const char* line : ECX, int len );

The above function seems to be refactored, with line in ECX and the len on the stack.

