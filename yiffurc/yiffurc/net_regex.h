// This file was generated by gen_regexes.py on Mon Aug 25 01:17:35 2008
#ifndef _NET_REGEX_H__
#define _NET_REGEX_H__

/*
]P<img src="http://apollo.furcadia.com/cache/500000006.png" colors="t12@'%+2>>,#%8" />

Custom specitag
*/

#include "pcre/pcre.h"
#include <iostream>

namespace yiffurc {

#define REGCOMP( dst, re, err, erro ) if (!(dst = pcre_compile( re, 0, &err, &erro, NULL ))) std::cerr << "YIFFurc: Failed to compile regex " #dst ": "<< err << " (" << erro << ")\n"
#define REGFREE( dst ) pcre_free( dst ), dst = 0

union SUBS_T {
   enum { MAX = 10 };
   int ints[ 30 ];
   struct { int so, eo; } sub[ 10 ];
};

struct S2C_RE {
   pcre* MOTD;
   pcre* DRAGONROAR;
   pcre* VER;
   pcre* MOTDEND;
   pcre* MACID;
   pcre* PASS;
   pcre* CREATEFAIL;
   pcre* LOGINFAIL;
   pcre* CAMSET;
   pcre* CAMTWEEN;
   pcre* OBJSET;
   pcre* AVCREATE;
   pcre* AVTWEEN;
   pcre* AVDESTROY;
   pcre* DREAMPOS;
   pcre* DREAMPOS2;
   pcre* DREAMCLEAR;
   pcre* VARSET;
   pcre* FLOORSET;
   pcre* BADGE;
   pcre* ONLINERESULT;
   pcre* FOOTOBJ;
   pcre* INVOBJ;
   pcre* PORTRAIT;
   pcre* FETCHPID;
   pcre* FETCHDREAM;
   pcre* USEDREAM;
   pcre* USEBGFILE;
   pcre* PLAYSONG;
   pcre* PLAYSOUND;
   pcre* SPEECH;
   pcre* WHISPER;
   pcre* SHOUT;
   pcre* EMOTE;
   pcre* EMIT;
   pcre* ROLL;
   pcre* VERBOSEROLL;
   pcre* DESCHEAD;
   pcre* DESCBODY;
   pcre* WHOUPTIME;
   pcre* WHOMAX;
   pcre* WHODAILYMAX;
   pcre* COOKIESREADY;
   pcre* COOKIE;
   pcre* INFOITEM;
   pcre* INFOPLAYER;
   pcre* JOIN;
   pcre* SUMMON;
   pcre* WHISPERFAIL;
   pcre* YOUWHISPER;
   pcre* CHAT;
   pcre* DISPLISTOPEN;
   pcre* DISPLISTCLOSE;
   pcre* SYNCCOLORCODE;
   pcre* YOUSHOUT;
   pcre* YOUSAY;
   pcre* TRIGGERSELF;
   pcre* TRIGGER;
   pcre* VERREQ;
   pcre* PING;
   pcre* SPECITAG;
   pcre* CUSTSPECITAG;
   pcre* WHISPERFAILEXACT;
   pcre* WHISPERFAILMORE;
   pcre* DESCBODY2;
   pcre* USEMAPFILE;
   pcre* WHISPERDENIED;
   pcre* SUMMONJOINECHO;
   pcre* DECLINED;
   pcre* DECLINEECHO;
   pcre* DECLINEFAIL;
   pcre* SUMMONED;
   pcre* JOINED;
   pcre* MSGBOX;
   pcre* AVSHOW;
   pcre* AVUPDATECOLORS;
   pcre* AVHIDE;
   pcre* PRINTPLAYERS;
   pcre* AVSHOW2;
   pcre* DSEMIT;

   S2C_RE( ) {
      const char* err; int erro;
      REGCOMP( MOTD, "^(.*)$", err, erro );
      REGCOMP( DRAGONROAR, "^Dragonroar$", err, erro );
      REGCOMP( VER, "^V0013$", err, erro );
      REGCOMP( MOTDEND, "^END$", err, erro );
      REGCOMP( MACID, "^\\\\PW(.+)$", err, erro );
      REGCOMP( PASS, "^&[&]+$", err, erro );
      REGCOMP( CREATEFAIL, "^N\\{([^}]*)}(.*)$", err, erro );
      REGCOMP( LOGINFAIL, "^Invalid name or password\\.$", err, erro );
      REGCOMP( CAMSET, "^@([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( CAMTWEEN, "^@([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( OBJSET, "^>(?:([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2}))+$", err, erro );
      //REGCOMP( AVCREATE, "^<([\\x23-\\xFF]{4})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF].*)((t|u[\\x23-\\xFF]{2}|v)[\\x23-\\xFF]{10,30})([\\x23-\\xFF])(.{4})$", err, erro );
      REGCOMP( AVCREATE, "^<([\\x23-\\xFF]{4})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF])([^\\s]+)([tuv][\\x23-\\xFF]+)(.)(.{4})(.)(..)?$", err, erro );
	  //
	  REGCOMP( AVTWEEN, "^/([\\x23-\\xFF]{4})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})$", err, erro );
      REGCOMP( AVDESTROY, "^\\)([\\x23-\\xFF]{4})$", err, erro );
      REGCOMP( DREAMPOS, "^]s([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x21-\\x3B=\\x3F-\\x7E]+)$", err, erro );
      REGCOMP( DREAMPOS2, "^]s([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})1([\\x21-\\x3B=\\x3F-\\x7E]+)(?: (.+))?$", err, erro );
      REGCOMP( DREAMCLEAR, "^]t([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( VARSET, "^0([\\x20-\\x7E]{2})(([\\x20-\\x7E]{3})|!mL([\\x20-\\x7E]{3})([\\x20-\\x7E]{3}))+$", err, erro );
      REGCOMP( FLOORSET, "^1(?:([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2}))+$", err, erro );
      REGCOMP( BADGE, "^]-#B([\\x20-\\x7E])$", err, erro );
      REGCOMP( ONLINERESULT, "^]%(0|1)([\\x21-\\x3B=\\x3F-\\x7E]+)$", err, erro );
      REGCOMP( FOOTOBJ, "^%([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( INVOBJ, "^\\^([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( PORTRAIT, "^]f((t|u[\\x23-\\xFF]{2}|v)[\\x23-\\xFF]{10,30})([\\x23-\\xFF]{3})([\\x21-\\x3B=\\x3F-\\x7E]+)$", err, erro );
      REGCOMP( FETCHPID, "^]&([0-9]+) (.+)$", err, erro );
      REGCOMP( FETCHDREAM, "^]q (.+) ([0-9]+)$", err, erro );
      REGCOMP( USEDREAM, "^]r (.+) ([0-9]+)$", err, erro );
      REGCOMP( USEBGFILE, "^]cc(.+)$", err, erro );
      REGCOMP( PLAYSONG, "^]j([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( PLAYSOUND, "^!([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( SPEECH, "^\\(<name shortname='([^']*)'>([^ ]+)</name>: (.*)$", err, erro );
      REGCOMP( WHISPER, "^\\(<font color='whisper'>\\[ <name shortname='([^']*)' src='whisper-from'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> whispers, \"(.*)\" to you\\. ]</font>$", err, erro );
      REGCOMP( SHOUT, "^\\(<font color='shout'>\\{S} <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> shouts: (.*)</font>$", err, erro );
      REGCOMP( EMOTE, "^\\(<font color='emote'><name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name>(.*)</font>$", err, erro );
      REGCOMP( EMIT, "^\\(<font color='emit'><img src='fsh://system.fsh:91' alt='@emit' /><channel name='@emit' /> (.*)</font>$", err, erro );
      REGCOMP( ROLL, "^\\(<font color='roll'><img src='fsh://system.fsh:101' alt='@roll' /><channel name='@roll' /> <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> rolls ([0-9]*)d([0-9]+) (?:(.*) )?& gets ([0-9]+)\\.</font>$", err, erro );
      REGCOMP( VERBOSEROLL, "^\\(<font color='roll'><img src='fsh://system.fsh:101' alt='@roll' /><channel name='@roll' /> <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> rolls ([0-9]*)d([0-9]+)(?: (.*))?:( \\([0-9]+\\))+ = ([0-9]+)\\.</font>$", err, erro );
      REGCOMP( DESCHEAD, "^\\(\\(You see <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name>\\.\\)$", err, erro );
      REGCOMP( DESCBODY, "^\\(<desc shortname='([^']*)' />&gt; (.*)$", err, erro );
      REGCOMP( WHOUPTIME, "^\\(<img src='fsh://system.fsh:86'  /> ([0-9]+) total players online. Uptime(?: ([0-9]+) days)? ([0-9]+):([0-9]+)$", err, erro );
      REGCOMP( WHOMAX, "^\\(<img src='fsh://system.fsh:86'  /> Max players this session: 4005 \\(\\* Max players this session: ([0-9]+)$", err, erro );
      REGCOMP( WHODAILYMAX, "^\\(<img src='fsh://system.fsh:86'  /> Max players today: ([0-9]+)$", err, erro );
      REGCOMP( COOKIESREADY, "^\\(<img src='fsh://system.fsh:90' alt='@cookie' /><channel name='@cookie' /> Your cookies are ready\\.$", err, erro );
      REGCOMP( COOKIE, "^\\(<img src='fsh://system.fsh:90' alt='@cookie' /><channel name='@cookie' /> ([\\x21-\\x3B=\\x3F-\\x7E]+) just gave you a cookie!(?: It has a note attached which reads: (.+))?$", err, erro );
      REGCOMP( INFOITEM, "^\\(Item: (.+)\\ \\(([0-9]+) active, ([0-9]+) inactive\\)$", err, erro );
      REGCOMP( INFOPLAYER, "^\\(Player info: ([\\x21-\\x3B=\\x3F-\\x7E]+) \\((.+)\\)$", err, erro );
      REGCOMP( JOIN, "^\\(<font color='query'><name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> requests permission to join your company. To accept the request, <a href='command://summon'>click here</a> or type `summon and press &lt;enter&gt;.</font>$", err, erro );
      REGCOMP( SUMMON, "^\\(<font color='query'><name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> asks you to join his or her company in <b>(.+)</b>. To accept the request, <a href='command://join'>click here</a> or type `join and press &lt;enter&gt;.</font>$", err, erro );
      REGCOMP( WHISPERFAIL, "^\\(<font color='error'>Sorry, there are no furres around right now with a name starting with ([\\x21-\\x3B=\\x3F-\\x7E]+)!  -- Beekin the Help Dragon</font>$", err, erro );
      REGCOMP( YOUWHISPER, "^\\(<font color='whisper'>\\[ You whisper \"(.*)\" to <name shortname='([^']*)' forced src='whisper-to'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name>\\. ]</font>$", err, erro );
      REGCOMP( CHAT, "^\\((.*)$", err, erro );
      REGCOMP( DISPLISTOPEN, "^~$", err, erro );
      REGCOMP( DISPLISTCLOSE, "^=$", err, erro );
      REGCOMP( SYNCCOLORCODE, "^]}((t|u[\\x23-\\xFF]{2}|v)[\\x23-\\xFF]{10,30})([\\x23-\\xFF]{3})$", err, erro );
      REGCOMP( YOUSHOUT, "^\\(<font color='shout'>You shout, \"(.*)\"</font>$", err, erro );
      REGCOMP( YOUSAY, "^\\(<font color='myspeech'>You say, \"(.*)\"</font>$", err, erro );
      REGCOMP( TRIGGERSELF, "^6([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})(?:([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2}))+$", err, erro );
      REGCOMP( TRIGGER, "^7([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})(?:([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})([\\x20-\\x7E]{2}))+$", err, erro );
      REGCOMP( VERREQ, "^]w$", err, erro );
      REGCOMP( PING, "^]marco ([0-9]+)$", err, erro );
      REGCOMP( SPECITAG, "^]-#A((t|u.{2}|v).{10,30})(.{3})$", err, erro );

	  REGCOMP( CUSTSPECITAG, "^]P<img src=\"(.+)\" colors=\"((t|u.{2}|v).{10,30})(.{3})\" />$", err, erro );

      REGCOMP( WHISPERFAILEXACT, "^\\(<font color='error'>Sorry, there's no furre around right now with an exact name ([\\x21-\\x3B=\\x3F-\\x7E]+)! To find similar names, try typing the name without the '%' at the beginning of the name\\. -- Beekin the Help Dragon</font>$", err, erro );
      REGCOMP( WHISPERFAILMORE, "^\\(<font color='error'>More than one furre's name begins that way.  You need to type more of the name, or maybe all of their name, so I can tell exactly who you mean!  -- Beekin the Help Dragon</font>$", err, erro );
      REGCOMP( DESCBODY2, "^\\(#B([\\x20-\\x7E])<desc shortname='([^']*)' /> (.*)$", err, erro );
      REGCOMP( USEMAPFILE, "^;(.+)$", err, erro );
      REGCOMP( WHISPERDENIED, "^\\(<font color='error'>Sorry, but <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> is not accepting whispers right now\\.</font>$", err, erro );
      REGCOMP( SUMMONJOINECHO, "^\\(<font color='success'>Your request has been sent to <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name>\\.</font>$", err, erro );
      REGCOMP( DECLINED, "^\\(<font color='warning'>Player <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> declined your request\\.</font>$", err, erro );
      REGCOMP( DECLINEECHO, "^\\(<font color='warning'>You decline the request from <name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name>\\.</font>$", err, erro );
      REGCOMP( DECLINEFAIL, "^\\(<font color='error'>There are no requests to decline\\.</font>$", err, erro );
      REGCOMP( SUMMONED, "^\\(<font color='success'><name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> summons you\\.</font>$", err, erro );
      REGCOMP( JOINED, "^\\(<font color='success'><name shortname='([^']*)'>([\\x21-\\x3B=\\x3F-\\x7E]+)</name> joins you\\.</font>$", err, erro );
      REGCOMP( MSGBOX, "^]#([^ ]*) ([0-9]+) (.*)$", err, erro );
      REGCOMP( AVSHOW, "^A([\\x23-\\xFF]{4})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})$", err, erro );
      REGCOMP( AVUPDATECOLORS, "^B([\\x23-\\xFF]{4})([\\x23-\\xFF]{2})((t|u[\\x23-\\xFF]{2}|v)[\\x23-\\xFF]{10,30})$", err, erro );
      REGCOMP( AVHIDE, "^C([\\x23-\\xFF]{4})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})$", err, erro );
      REGCOMP( PRINTPLAYERS, "^]3(0|1) ([\\x21-\\x3B=\\x3F-\\x7E]+) ([\\x21-\\x3B=\\x3F-\\x7E]+)$", err, erro );
      REGCOMP( AVSHOW2, "^D([\\x23-\\xFF]{4})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})([\\x23-\\xFF]{2})(.+)$", err, erro );
      REGCOMP( DSEMIT, "^\\(<font color='dragonspeak'><img src='fsh://system.fsh:91' alt='@emit' /><channel name='@emit' /> (.*)</font>$", err, erro );
   } // S2C_RE( )

   ~S2C_RE( ) {
      REGFREE( MOTD );
      REGFREE( DRAGONROAR );
      REGFREE( VER );
      REGFREE( MOTDEND );
      REGFREE( MACID );
      REGFREE( PASS );
      REGFREE( CREATEFAIL );
      REGFREE( LOGINFAIL );
      REGFREE( CAMSET );
      REGFREE( CAMTWEEN );
      REGFREE( OBJSET );
      REGFREE( AVCREATE );
      REGFREE( AVTWEEN );
      REGFREE( AVDESTROY );
      REGFREE( DREAMPOS );
      REGFREE( DREAMPOS2 );
      REGFREE( DREAMCLEAR );
      REGFREE( VARSET );
      REGFREE( FLOORSET );
      REGFREE( BADGE );
      REGFREE( ONLINERESULT );
      REGFREE( FOOTOBJ );
      REGFREE( INVOBJ );
      REGFREE( PORTRAIT );
      REGFREE( FETCHPID );
      REGFREE( FETCHDREAM );
      REGFREE( USEDREAM );
      REGFREE( USEBGFILE );
      REGFREE( PLAYSONG );
      REGFREE( PLAYSOUND );
      REGFREE( SPEECH );
      REGFREE( WHISPER );
      REGFREE( SHOUT );
      REGFREE( EMOTE );
      REGFREE( EMIT );
      REGFREE( ROLL );
      REGFREE( VERBOSEROLL );
      REGFREE( DESCHEAD );
      REGFREE( DESCBODY );
      REGFREE( WHOUPTIME );
      REGFREE( WHOMAX );
      REGFREE( WHODAILYMAX );
      REGFREE( COOKIESREADY );
      REGFREE( COOKIE );
      REGFREE( INFOITEM );
      REGFREE( INFOPLAYER );
      REGFREE( JOIN );
      REGFREE( SUMMON );
      REGFREE( WHISPERFAIL );
      REGFREE( YOUWHISPER );
      REGFREE( CHAT );
      REGFREE( DISPLISTOPEN );
      REGFREE( DISPLISTCLOSE );
      REGFREE( SYNCCOLORCODE );
      REGFREE( YOUSHOUT );
      REGFREE( YOUSAY );
      REGFREE( TRIGGERSELF );
      REGFREE( TRIGGER );
      REGFREE( VERREQ );
      REGFREE( PING );
      REGFREE( SPECITAG );
      REGFREE( WHISPERFAILEXACT );
      REGFREE( WHISPERFAILMORE );
      REGFREE( DESCBODY2 );
      REGFREE( USEMAPFILE );
      REGFREE( WHISPERDENIED );
      REGFREE( SUMMONJOINECHO );
      REGFREE( DECLINED );
      REGFREE( DECLINEECHO );
      REGFREE( DECLINEFAIL );
      REGFREE( SUMMONED );
      REGFREE( JOINED );
      REGFREE( MSGBOX );
      REGFREE( AVSHOW );
      REGFREE( AVUPDATECOLORS );
      REGFREE( AVHIDE );
      REGFREE( PRINTPLAYERS );
      REGFREE( AVSHOW2 );
      REGFREE( DSEMIT );
   } // ~S2C_RE( )
}; // struct S2C_RE

struct C2S_RE {
   pcre* KEEPALIVE;
   pcre* CREATEPLAYER;
   pcre* LOGIN;
   pcre* QUIT;
   pcre* SETCOLOR;
   pcre* CHANGECOLOR;
   pcre* SETDESC;
   pcre* CHANGEDESC;
   pcre* PONG;
   pcre* VERSION;
   pcre* WINVER;
   pcre* DOWNLOADFINISHED;
   pcre* MOVE;
   pcre* SITDOWN;
   pcre* STANDUP;
   pcre* LIEDOWN;
   pcre* SITSTANDLIE;
   pcre* SUMMON;
   pcre* JOIN;
   pcre* DECLINE;
   pcre* GOMAP;
   pcre* GOBACK;
   pcre* GOALLEG;
   pcre* GOVINCA;
   pcre* GOWELCOMEMAP;
   pcre* SPEECH;
   pcre* SHOUT;
   pcre* SHOUTTOGGLE;
   pcre* WHISPER;
   pcre* WINGS;
   pcre* DRAGON;
   pcre* PHOENIX;
   pcre* PORTRAITCHANGE;
   pcre* EAGLE;
   pcre* DRAGONBREATH;
   pcre* PHOENIXFLAME;
   pcre* LOOKPOS;
   pcre* WHOINFO;
   pcre* PICKUP;
   pcre* USE;
   pcre* FDL;
   pcre* LOOKPLAYER;
   pcre* GRYFFE;
   pcre* ONLINECHECK;
   pcre* EMOTE;
   pcre* TURNLEFT;
   pcre* TURNRIGHT;

   C2S_RE( ) {
      const char* err; int erro;
      REGCOMP( KEEPALIVE, "^iamhere$", err, erro );
      REGCOMP( CREATEPLAYER, "^create ([\\x21-\\x3B=\\x3F-\\x7E]+) ([^ ]+) ([^ ]+) N Y$", err, erro );
      REGCOMP( LOGIN, "^connect ([\\x21-\\x3B=\\x3F-\\x7E]+) ([^ ]+) (?:PW(.+))?$", err, erro );
      REGCOMP( QUIT, "^quit$", err, erro );
      REGCOMP( SETCOLOR, "^color ((t|u[\\x23-\\xFF]{2}|v)[\\x23-\\xFF]{10,30})([\\x23-\\xFF]{3})$", err, erro );
      REGCOMP( CHANGECOLOR, "^chcol ((t|u[\\x23-\\xFF]{2}|v)[\\x23-\\xFF]{10,30})([\\x23-\\xFF]{3})$", err, erro );
      REGCOMP( SETDESC, "^desc (.*)$", err, erro );
      REGCOMP( CHANGEDESC, "^chdesc (.*)$", err, erro );
      REGCOMP( PONG, "^polon ([0-9]+)$", err, erro );
      REGCOMP( VERSION, "^version ([0-9]+).([0-9]+)$", err, erro );
      REGCOMP( WINVER, "^Winver ([0-9]+).([0-9]+) b([0-9]+) d([0-9]+).([0-9]+)$", err, erro );
      REGCOMP( DOWNLOADFINISHED, "^vascodagama$", err, erro );
      REGCOMP( MOVE, "^m ([1379])$", err, erro );
      REGCOMP( SITDOWN, "^sit$", err, erro );
      REGCOMP( STANDUP, "^stand$", err, erro );
      REGCOMP( LIEDOWN, "^liedown$", err, erro );
      REGCOMP( SITSTANDLIE, "^lie$", err, erro );
      REGCOMP( SUMMON, "^summon(?: (%)?([\\x21-\\x3B=\\x3F-\\x7E]+))?$", err, erro );
      REGCOMP( JOIN, "^join(?: (%)?([\\x21-\\x3B=\\x3F-\\x7E]+))?$", err, erro );
      REGCOMP( DECLINE, "^decline$", err, erro );
      REGCOMP( GOMAP, "^gomap ([\\x20-\\x7E])$", err, erro );
      REGCOMP( GOBACK, "^goback$", err, erro );
      REGCOMP( GOALLEG, "^goalleg$", err, erro );
      REGCOMP( GOVINCA, "^gostart$", err, erro );
      REGCOMP( GOWELCOMEMAP, "^wmap$", err, erro );
      REGCOMP( SPEECH, "^\"(.+)$", err, erro );
      REGCOMP( SHOUT, "^-(.+)$", err, erro );
      REGCOMP( SHOUTTOGGLE, "^-$", err, erro );
      REGCOMP( WHISPER, "^wh (%)?([\\x21-\\x3B=\\x3F-\\x7E]+) (.+)$", err, erro );
      REGCOMP( WINGS, "^wings$", err, erro );
      REGCOMP( DRAGON, "^dragon$", err, erro );
      REGCOMP( PHOENIX, "^phoenix$", err, erro );
      REGCOMP( PORTRAITCHANGE, "^portrchng$", err, erro );
      REGCOMP( EAGLE, "^eagle$", err, erro );
      REGCOMP( DRAGONBREATH, "^breath$", err, erro );
      REGCOMP( PHOENIXFLAME, "^flame$", err, erro );
      REGCOMP( LOOKPOS, "^l ([\\x20-\\x7E]{2})([\\x20-\\x7E]{2})$", err, erro );
      REGCOMP( WHOINFO, "^who$", err, erro );
      REGCOMP( PICKUP, "^get$", err, erro );
      REGCOMP( USE, "^use$", err, erro );
      REGCOMP( FDL, "^fdl (furc://.+)$", err, erro );
      REGCOMP( LOOKPLAYER, "^\"(?:l|look) (%)?([\\x21-\\x3B=\\x3F-\\x7E]+)$", err, erro );
      REGCOMP( GRYFFE, "^gryffe$", err, erro );
      REGCOMP( ONLINECHECK, "^onln ([\\x21-\\x3B=\\x3F-\\x7E]+)$", err, erro );
      REGCOMP( EMOTE, "^:(.+)$", err, erro );
      REGCOMP( TURNLEFT, "^<$", err, erro );
      REGCOMP( TURNRIGHT, "^>$", err, erro );
   } // C2S_RE( )

   ~C2S_RE( ) {
      REGFREE( KEEPALIVE );
      REGFREE( CREATEPLAYER );
      REGFREE( LOGIN );
      REGFREE( QUIT );
      REGFREE( SETCOLOR );
      REGFREE( CHANGECOLOR );
      REGFREE( SETDESC );
      REGFREE( CHANGEDESC );
      REGFREE( PONG );
      REGFREE( VERSION );
      REGFREE( WINVER );
      REGFREE( DOWNLOADFINISHED );
      REGFREE( MOVE );
      REGFREE( SITDOWN );
      REGFREE( STANDUP );
      REGFREE( LIEDOWN );
      REGFREE( SITSTANDLIE );
      REGFREE( SUMMON );
      REGFREE( JOIN );
      REGFREE( DECLINE );
      REGFREE( GOMAP );
      REGFREE( GOBACK );
      REGFREE( GOALLEG );
      REGFREE( GOVINCA );
      REGFREE( GOWELCOMEMAP );
      REGFREE( SPEECH );
      REGFREE( SHOUT );
      REGFREE( SHOUTTOGGLE );
      REGFREE( WHISPER );
      REGFREE( WINGS );
      REGFREE( DRAGON );
      REGFREE( PHOENIX );
      REGFREE( PORTRAITCHANGE );
      REGFREE( EAGLE );
      REGFREE( DRAGONBREATH );
      REGFREE( PHOENIXFLAME );
      REGFREE( LOOKPOS );
      REGFREE( WHOINFO );
      REGFREE( PICKUP );
      REGFREE( USE );
      REGFREE( FDL );
      REGFREE( LOOKPLAYER );
      REGFREE( GRYFFE );
      REGFREE( ONLINECHECK );
      REGFREE( EMOTE );
      REGFREE( TURNLEFT );
      REGFREE( TURNRIGHT );
   } // ~C2S_RE( )
}; // struct C2S_RE

struct XFER_S2C_RE {
   pcre* GREETING;
   pcre* USEROK;
   pcre* LOGGEDIN;
   pcre* UFPSET;
   pcre* UPLOADOK;
   pcre* CHUNKOK;
   pcre* UPLOADDONE;
   pcre* LOGGEDOUT;
   pcre* INACTIVITY;
   pcre* DOWNLOADINFO;
   pcre* FILENOTFOUND;

   XFER_S2C_RE( ) {
      const char* err; int erro;
      REGCOMP( GREETING, "^10(?: (.+))?$", err, erro );
      REGCOMP( USEROK, "^20(?: (.+))?$", err, erro );
      REGCOMP( LOGGEDIN, "^30(?: (.+))?$", err, erro );
      REGCOMP( UFPSET, "^90(?: (.+))?$", err, erro );
      REGCOMP( UPLOADOK, "^50 (d+)(?: (.+))?$", err, erro );
      REGCOMP( CHUNKOK, "^55 (d+)$", err, erro );
      REGCOMP( UPLOADDONE, "^59(?: (.+))?$", err, erro );
      REGCOMP( LOGGEDOUT, "^99(?: (.+))?$", err, erro );
      REGCOMP( INACTIVITY, "^98(?: (.+))?$", err, erro );
      REGCOMP( DOWNLOADINFO, "^44 (.+) (.+) (.+) (.+)$", err, erro );
      REGCOMP( FILENOTFOUND, "^41(?: (.+))?$", err, erro );
   } // XFER_S2C_RE( )

   ~XFER_S2C_RE( ) {
      REGFREE( GREETING );
      REGFREE( USEROK );
      REGFREE( LOGGEDIN );
      REGFREE( UFPSET );
      REGFREE( UPLOADOK );
      REGFREE( CHUNKOK );
      REGFREE( UPLOADDONE );
      REGFREE( LOGGEDOUT );
      REGFREE( INACTIVITY );
      REGFREE( DOWNLOADINFO );
      REGFREE( FILENOTFOUND );
   } // ~XFER_S2C_RE( )
}; // struct XFER_S2C_RE

} // namespace yiffurc

#endif // _NET_REGEX_H__
